1. The source codes

Note: There are runtime issues on Perlmutter with the Fortran codes for this exercises.
Please use the C code below for exercises 

"stream.c" is the STREAM benchmark code with first touch
(note: "stream.f" is the STREAM benchmark code with first touch)

The provided stream.c code is parallelized with OpenMP, and uses first touch for initialization.

2. Use the default GNU compiler and the compiler wrapper to build:
% cc -fopenmp -o stream stream.c

3. To run by submitting a batch script
% sbatch run_stream.sh

here "run_stream.sh" is a sample batch script with various number of OMP_NUM_THREADS,
OMP_PROC_BIND, and OMP_PLACES settings, and capture the TRIAD memory bandwidth result.

4. Check "sample_stream_result" to see a sample batch job output from the above run.
Explain why doing first touch helps with STREAM memory bandwidth results.


6. FYI: Issuase with Fortran codes:
  "stream.f" is the STREAM benchmark code without first touch

  To compile:
  % cc -c -fopenmp mysecond.c
  % ftn -c -fopenmp stream.c
  % ftn -fopenmp stream.o mysecond.o -o stream

  However, there are runtime segmentation fault with GNU or Intel compilers, and incorrect
  bandwidth results (negative) with Nvidia compilers.


~
